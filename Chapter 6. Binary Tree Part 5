654. Maximum binary tree最大二叉树
参数和返回值：参数是存放元素的数组，返回二叉树的头节点
终止条件：当数组的大小为1的时候，说明到了叶子结点，这里是定义了一个新的节点，然后将这个大小为1的数组的值赋值给这个新的节点
单层递归逻辑：找到最大的值，构造根节点，下标用来分割数组
最大值左区间，构造左子树
最大值右区间，构造右子树
整体的思路还算简单直接

这道题的难点我个人觉得还是在于审题，理解题意。题目中给出的意思是递归地去构建，而不是随意构建。leetcode上面的题目结果基本都是唯一的。

617 Merge Two binary trees合并二叉树
参数和返回值：参数是两个根节点，返回值是合并之后的二叉树的根节点
终止条件：if t1 is Null, return t2; if t2 is NULL, return t1
单层逻辑：节点求和，递归左树，递归右树

这里面需要思考的逻辑就是，为何t1空的时候，可以直接返回t2
其实可以将二叉树就看成是链表就可以了，一个头节点可以包含之后所有的信息

700 Search in a binary search tree二叉搜索树中的检索
二叉搜索树的定义：左小右大
递归法：
参数：根节点和检索的数值；  返回：搜索数值所在的节点
终止条件：root为空，或者找到，就返回root
单层逻辑：如果root的val大于target，搜索左子树
迭代法要比递归法简单很多

98. Validate binary search tree验证二叉搜索树
参数：root。返回值：bool
终止条件：if root == NULL, return true
单层逻辑：
这里面有个很关键的点，就是要用到后序遍历，因为后序遍历的结果是一个左中右，对应的二叉搜索树就是从小到大的单调。
递归的思想还是得理解啊
