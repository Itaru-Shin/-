贪心算法

贪心算法没有固定的套路，唯一的难点就是如何通过局部最优，推出整体最优
如何验证可不可以用贪心算法：举反例，如果想不到，就试一试贪心

贪心算法的步骤：
1. 将问题分解为若干子问题
2. 找出合适的贪心策略
3. 求解每一个字问题的最优解
4. 将局部最优解堆叠成全局最优解

455. Assign Cookies分发饼干
这里的贪心策略，是通过先喂饱大的
当然也可以先喂饱小的，确实没啥区别

剩下的就是代码实现的细节问题了

返回的是index，也就是满足了多少个小孩

376 Wiggle Subsequence
摆动子序列，就是两两元素的差值的关系是大小大小

注意：子序列，是不能改变原来的前后关系的！

这里面需要考虑的情况比较多：
坡的问题：
平坡后继续单调
平坡后不再单调
这里有个很巧妙的方法，就是不及时更新prediff。
prediff只有在单调性发生改变的时候才更新，这样的话即使遇到平坡，也无所谓

动态规划等到了那儿的时候再看

53. Maximum Subarray
可以暴力解法直接写，但是c++勉强可以过，其他语言不一定了

这道题的贪心思路我一开始并没有想到，当前连续和为负数时，直接放弃，从下一个元素重新开始计算

这里有个点需要注意，那就是result初始化的时候要是最小整数值

当知道这道题的思路了之后，就很简单了
