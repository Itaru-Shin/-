513. Find Bottom left tree value
这是一道递归比较麻烦，但是层次遍历比较简单的题目

现在看递归和回溯也是比较简单的了，但是脑子里面还是得清楚，开始终止条件和单层逻辑都写在哪一块（block的思想）
不能继续以前的那样线性想法一路而下了，而是要分段，分块

112. Path Sum
深度优先来遍历
1. 确定参数和返回类型：参数，一个根节点，一个计数器，返回值是bool
2. 终止条件： 可以让count初始化为target，然后做递减，如果count = 0的话，并且是叶子结点，就返回true
3. 单层逻辑：有路径为true了，就返回true，不然就是false

113. Path Sum 2
跟上一题基本一样，就是要加个path的记录

106 Construct binary tree from inorder and postorder traversal 从中序和后序遍历序列构造二叉树
这个是很关键的一道题，介绍了如何构造二叉树
根据后序可以知道root，然后根据root可以在中序中区分左和右
然后又能在后序中找到左和右中的root在哪儿
循环往复

在这里面还有一个很关键的点，就是边界不变量，左闭右开还是如何，都要保持不变

构造唯一的二叉序必须要用到中序，前+后的组合是不能构造二叉树的

105就是前+中的组合来构造二叉树，跟106的思路是完全一样的
