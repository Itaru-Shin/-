今儿的任务主要就是要刷一些题

24. Swap nodes in pairs
这里面涉及到一个比较tricky的一个操作，那就是pre.next = self.swapPairs(next)递归的方法
递归是需要明确循环体，以及结束条件的，这个在今后的刷题中应该要多多练习


19. Remove Nth Node from End of List
这个题也是个比较tricky的题目，他的题目要求是从后往前数的Nth个元素进行删除，题目中的思路是使用双指针进行操作
快指针先移动n+1步，然后慢指针跟随快指针移动。通过画图举例就可以得到为什么要移动n+1步了
删除的操作十分简单

02.07 Intersection of Two Linked Lists
示例中的skip是指在相交节点前有多少个Node
这里面需要注意的一点是，是需要指针相等，而不是数值相等（那么问题，是在声明链表的时候，就需要声明到同一个指针中去吗）
答：链表的创建是需要一个个的声明Node，然后用next链接起来。那么题目中的input应该是在声明到时候链接到相同的指针去了

我一开始的思路是，为什么不全从末尾开始往前找，但是单链表是不允许逆向查询的，所以只能正向来查询

发现了python中很神奇的一点，curA, curB = curB, curA 可以直接实现值的交换，利用到了元组的拆包机制

这里面需要掌握两个指针的使用，以及对其的思想。整体而言难度是比较简单的
